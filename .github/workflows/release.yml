name: Build and release to PyPI
on:
  deployment: {}
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.7"
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.flexgetbot_pat }}
        fetch-depth: 0
    - name: Setup Git User
      run: |
        git config user.email ${{ secrets.git_email }}
        git config user.name ${{ secrets.git_user }}
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Set up pip cache
      uses: actions/cache@v2
      with:
        path: pip_cache
        key: ${{ runner.OS }}-python${{ env.PYTHON_VERSION }}-${{ hashFiles('*requirements*.txt') }}
        restore-keys: |
          ${{ runner.OS }}-python${{ env.PYTHON_VERSION }}-
    - name: Install dev dependencies
      run: |
        pip --cache-dir pip_cache install -r dev-requirements.txt
    - name: Set Deployment Status Pending
      uses: deliverybot/deployment-status@v1
      with:
        state: pending
        token: ${{ github.token }}
    - name: Run release script
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.pypi_token }}
      run: |
        ./release.sh
    - name: Prep Changelog
      id: changelog
      run: |
        previous=$(git tag --sort version:refname | tail -n 2 | head -n 1)
        if [ "$previous" ]; then
          changelog=$(git log --oneline --no-decorate $previous..@~2 | grep -v -E "Prepare.*dev")
        else
          changelog=$(git log --oneline --no-decorate | grep -v -E "Prepare.*dev")
        fi
        echo $changelog
        changelog="${changelog//'%'/'%25'}"
        changelog="${changelog//$'\n'/'%0A' - }"
        changelog=" - ${changelog//$'\r'/'%0D'}"
        echo ::set-output name=changelog::$changelog
    - uses: ncipollo/release-action@v1
      if: env.release_tag
      with:
        tag: ${{ env.release_tag }}
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        body: ${{ steps.changelog.output.changelog }}
    - name: Set Deployment Status Success
      uses: deliverybot/deployment-status@v1
      with:
        state: success
        token: ${{ github.token }}
    - name: Set Deployment Status Failure
      if: failure() || cancelled()
      uses: deliverybot/deployment-status@v1
      with:
        state: failure
        token: ${{ github.token }}
