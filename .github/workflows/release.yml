name: Build and release to PyPI
on:
  deployment: {}
permissions: {}
jobs:
  release:
    permissions:
      contents: write # for git push
      deployments: write # to create a deployment status

    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.7"
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.flexgetbot_pat }}
        fetch-depth: 0
    - name: Setup Git User
      run: |
        git config user.email ${{ secrets.git_email }}
        git config user.name ${{ secrets.git_user }}
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'dev-requirements.txt'
    - uses: snok/install-poetry@v1
      with:
        version: "1.2"
    - name: Install poetry plugins
      run: poetry self add poeblix poetry-bumpversion
    - name: Install dev dependencies
      run: |
        poetry install --only dev --no-root
    - name: Set Deployment Status Pending
      uses: deliverybot/deployment-status@v1
      with:
        state: pending
        token: ${{ github.token }}
    - name: Run release script
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.pypi_token }}
      run: |
        ./release.sh
    - name: Prep Changelog
      id: changelog
      if: env.release_tag
      run: |
        version=$(echo ${{ env.release_tag }} | sed -e 's/v//' -e 's/\.//g')
        date=$(date +%Y-%m-%d)
        link="${{ env.release_tag }} [Changelog](https://flexget.com/ChangeLog#${version}-${date})"
        echo ::set-output name=changeloglink::$link
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      if: env.release_tag
      with:
        tag: ${{ env.release_tag }}
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        body: ${{ steps.changelog.output.changeloglink }}
    - name: Set Deployment Status Success
      uses: deliverybot/deployment-status@v1
      with:
        state: success
        token: ${{ github.token }}
    - name: Set Deployment Status Failure
      if: failure() || cancelled()
      uses: deliverybot/deployment-status@v1
      with:
        state: failure
        token: ${{ github.token }}
