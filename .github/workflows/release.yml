name: Build and release to PyPI
on:
  deployment: {}
permissions: {}
jobs:
  release:
    permissions:
      contents: write # for git push
      deployments: write # to create a deployment status

    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.10"
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.flexgetbot_pat }}
        fetch-depth: 0
    - name: Setup Git User
      run: |
        git config user.email ${{ secrets.git_email }}
        git config user.name ${{ secrets.git_user }}
    - uses: pdm-project/setup-pdm@main
      name: Setup PDM
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        version: 2.1.5
    - name: Install pdm plugins
      # TODO: Is this the best place and way to install pdm plugins?
      # Some way to require them in the pyproject.toml?
      run: |
        pdm plugin add pdm-buildlocked
    - name: Install dev dependencies
      run: |
        pdm install --dev -G release --no-default --no-self
    - name: Set Deployment Status Pending
      uses: deliverybot/deployment-status@v1
      with:
        state: pending
        token: ${{ github.token }}
    - name: Run release script
      env:
        PDM_PUBLISH_USERNAME: "__token__"
        PDM_PUBLISH_PASSWORD: ${{ secrets.pypi_token }}
      run: |
        pdm run ./release.sh
    - name: Build Changelog
      id: changelog
      if: env.release_tag
      run: |
        echo 'CHANGELOG_BODY<<EOF' >> $GITHUB_ENV
        pdm run python dev_tools.py get-changelog ${{ env.release_tag }} >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      if: env.release_tag
      with:
        tag: ${{ env.release_tag }}
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        body: ${{ env.CHANGELOG_BODY }}
    - name: Set Deployment Status Success
      uses: deliverybot/deployment-status@v1
      with:
        state: success
        token: ${{ github.token }}
    - name: Set Deployment Status Failure
      if: failure() || cancelled()
      uses: deliverybot/deployment-status@v1
      with:
        state: failure
        token: ${{ github.token }}
