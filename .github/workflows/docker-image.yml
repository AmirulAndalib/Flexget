name: Docker Image CI

on:
  push:
    branches:
      - develop
    tags:
      - v*.*.*
  pull_request:
    branches:
      - "*"

permissions: {}

jobs:
  build:
    permissions:
      contents: read # to fetch code (actions/checkout)
      packages: write # to push to ghcr.io

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/flexget/flexget
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: github.event_name == 'push'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build Base Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        with:
          context: ./
          builder: ${{ steps.buildx.output.name }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.output.tags }}
          labels: ${{ steps.meta.output.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      - name: Build Base Docker Image develop
        id: docker_build_develop
        uses: docker/build-push-action@v2
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/develop')
        with:
          context: ./
          builder: ${{ steps.buildx.output.name }}
          push: true
          platforms: linux/amd64
          tags: ghcr.io/flexget/flexget:develop
          labels: ${{ steps.meta.output.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

